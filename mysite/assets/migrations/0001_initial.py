# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-02-12 15:25
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='业务线')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '业务线',
                'verbose_name_plural': '业务线',
            },
        ),
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='CPU型号')),
                ('cpu_count', models.SmallIntegerField(verbose_name='物理CPU个数')),
                ('cpu_core_count', models.SmallIntegerField(verbose_name='CPU核数')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': 'CPU',
                'verbose_name_plural': 'CPU',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(max_length=64, verbose_name='sn')),
                ('number', models.CharField(blank=True, max_length=32, null=True, verbose_name='资产编号')),
                ('qs', models.CharField(blank=True, max_length=64, null=True, verbose_name='快速服务代码')),
                ('asset_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='设备名称')),
                ('asset_type', models.SmallIntegerField(choices=[(0, '交换机'), (1, '路由器'), (2, '防火墙'), (3, '安全设备')], default=0, verbose_name='设备类型')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('cabinet', models.CharField(blank=True, max_length=32, null=True, verbose_name='机柜号')),
                ('device_cabinet_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='机器位置')),
                ('status', models.SmallIntegerField(choices=[(0, '在线'), (1, '下线'), (2, '故障'), (3, '备用'), (4, '未知')], default=0, verbose_name='设备状态')),
                ('admin', models.CharField(blank=True, max_length=32, null=True, verbose_name='资产管理员')),
                ('buy_date', models.DateField(blank=True, null=True, verbose_name='购买时间')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='最近修改时间')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '网络设备',
                'verbose_name_plural': '网络设备',
            },
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(blank=True, max_length=128, null=True, verbose_name='SN号')),
                ('slot', models.CharField(max_length=64, verbose_name='插槽位')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='磁盘型号')),
                ('capacity', models.FloatField(verbose_name='磁盘容量GB')),
                ('iface_type', models.CharField(choices=[('SATA', 'SATA'), ('SAS', 'SAS'), ('SCSI', 'SCSI'), ('SSD', 'SSD')], default='SAS', max_length=64, verbose_name='接口类型')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('update_date', models.DateTimeField(blank=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '硬盘',
                'verbose_name_plural': '硬盘',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=64, unique=True, verbose_name='主机名')),
                ('sn', models.CharField(max_length=64, unique=True, verbose_name='sn')),
                ('number', models.CharField(blank=True, max_length=64, null=True, verbose_name='资产编号')),
                ('qs', models.CharField(blank=True, max_length=64, null=True, verbose_name='快速服务代码')),
                ('asset_name', models.SmallIntegerField(choices=[(0, 'Dell R510'), (1, 'Dell R620'), (2, 'Dell R710'), (3, 'Dell R720'), (4, 'Dell R720xd')], default=3, verbose_name='设备名称')),
                ('raid_type', models.SmallIntegerField(choices=[(0, 'RADI 0'), (1, 'RADI 1'), (2, 'RADI 5'), (3, 'RADI 10')], default=3, verbose_name='RAID类型')),
                ('management_ip', models.GenericIPAddressField(blank=True, null=True, unique=True, verbose_name='管理IP')),
                ('cabinet', models.CharField(blank=True, max_length=32, null=True, verbose_name='机柜号')),
                ('host_cabinet_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='机器位置')),
                ('status', models.SmallIntegerField(choices=[(0, '在线'), (1, '下线'), (2, '故障'), (3, '备用'), (4, '未知')], default=0, verbose_name='设备状态')),
                ('is_virtual', models.BooleanField(default=False, verbose_name='虚拟机')),
                ('admin', models.CharField(default='', max_length=32, verbose_name='资产管理员')),
                ('buy_date', models.DateField(blank=True, null=True, verbose_name='购买时间')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='最近修改时间')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '主机',
                'verbose_name_plural': '主机',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='IDC名称')),
                ('staff', models.CharField(max_length=32, verbose_name='客服')),
                ('phone', models.CharField(max_length=32, verbose_name='IDC联系电话')),
                ('address', models.CharField(max_length=128, verbose_name='IDC地址')),
                ('memo', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': 'IDC',
                'verbose_name_plural': 'IDC',
            },
        ),
        migrations.CreateModel(
            name='Manufactory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='制造厂商')),
                ('staff', models.CharField(blank=True, max_length=32, null=True, verbose_name='售后联系方式')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '制造厂商',
                'verbose_name_plural': '制造厂商',
            },
        ),
        migrations.CreateModel(
            name='NIC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='网卡名')),
                ('slot', models.CharField(blank=True, max_length=64, null=True, verbose_name='插口')),
                ('macaddress', models.CharField(max_length=64, unique=True, verbose_name='MAC')),
                ('ipaddress', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('netmask', models.GenericIPAddressField(blank=True, null=True, verbose_name='子网掩码')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(blank=True, null=True, verbose_name='更新时间')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nic', to='assets.Host')),
            ],
            options={
                'verbose_name': '网卡',
                'verbose_name_plural': '网卡',
            },
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sn', models.CharField(blank=True, max_length=128, null=True, verbose_name='SN号')),
                ('model', models.CharField(max_length=128, verbose_name='型号')),
                ('slot', models.CharField(max_length=64, verbose_name='插槽')),
                ('capacity', models.IntegerField(verbose_name='内存大小(MB)')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('update_date', models.DateTimeField(blank=True, null=True, verbose_name='更新时间')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ram', to='assets.Host')),
            ],
            options={
                'verbose_name': '内存',
                'verbose_name_plural': '内存',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='服务名')),
                ('port', models.IntegerField(blank=True, null=True, verbose_name='端口')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('host', models.ManyToManyField(to='assets.Host')),
            ],
            options={
                'verbose_name': '服务',
                'verbose_name_plural': '服务',
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SmallIntegerField(choices=[(0, 'Centos'), (1, 'Window')], default=0, verbose_name='系统类型')),
                ('version', models.CharField(max_length=32, verbose_name='系统版本号')),
            ],
            options={
                'verbose_name': '操作系统',
                'verbose_name_plural': '操作系统',
            },
        ),
        migrations.AlterUniqueTogether(
            name='idc',
            unique_together=set([('name', 'staff')]),
        ),
        migrations.AddField(
            model_name='host',
            name='idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.IDC', verbose_name='IDC机房'),
        ),
        migrations.AddField(
            model_name='host',
            name='manufactory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.Manufactory', verbose_name='制造厂商'),
        ),
        migrations.AddField(
            model_name='host',
            name='os_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.System', verbose_name='操作系统'),
        ),
        migrations.AddField(
            model_name='host',
            name='parent_host',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_level', to='assets.Host', verbose_name='宿主机'),
        ),
        migrations.AddField(
            model_name='disk',
            name='host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disk', to='assets.Host'),
        ),
        migrations.AddField(
            model_name='device',
            name='idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.IDC', verbose_name='IDC机房'),
        ),
        migrations.AddField(
            model_name='device',
            name='manufactory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.Manufactory', verbose_name='制造厂商'),
        ),
        migrations.AddField(
            model_name='device',
            name='parent_device',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_level', to='assets.Device', verbose_name='上链设备'),
        ),
        migrations.AddField(
            model_name='cpu',
            name='host',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cpu', to='assets.Host'),
        ),
        migrations.AddField(
            model_name='businessunit',
            name='service',
            field=models.ManyToManyField(to='assets.Service'),
        ),
        migrations.AlterUniqueTogether(
            name='service',
            unique_together=set([('name', 'port')]),
        ),
        migrations.AlterUniqueTogether(
            name='ram',
            unique_together=set([('host', 'slot')]),
        ),
        migrations.AlterUniqueTogether(
            name='nic',
            unique_together=set([('host', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='disk',
            unique_together=set([('host', 'slot')]),
        ),
    ]
